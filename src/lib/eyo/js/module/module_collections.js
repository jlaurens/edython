/**
 * edython
 *
 * Copyright 2019 Jérôme LAURENS.
 *
 * License EUPL-1.2
 */

/**
 * @fileoverview collections module. Automatically generated by `python3 bin/helpers/modulebot.py collections through npm run eyo:module`
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

eYo.module.newNS('collections__module', {
  URL: 'https://docs.python.org/3.6/library/collections.html'
})

;(() => {
  /* Singleton constructor */
  let newItem = eYo.module.collections__module.makeNewItem()

  eYo.module.collections__module.data_ = {
    categories: [
      'chainmap-objects',
      'counter-objects',
      'deque-objects',
      'defaultdict-objects',
      'namedtuple-factory-function-for-tuples-with-named-fields',
      'ordereddict-objects',
      'userdict-objects',
      'userlist-objects',
      'userstring-objects'
    ],
    types: [
      'class',
      'function',
      'classmethod',
      'method',
      'attribute'
    ],
    items: [
      newItem({
        name: 'ChainMap',
        class: 'collections',
        category: 0,
        type_: 0,
        href: '#collections.ChainMap',
        stmt: true,
        ary: Infinity,
        mandatory: 0,
        arguments: [
          {
            name: '*maps',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'Counter',
        class: 'collections',
        category: 1,
        type_: 0,
        href: '#collections.Counter',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'iterable-or-mapping',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'OrderedDict',
        class: 'collections',
        category: 5,
        type_: 0,
        href: '#collections.OrderedDict',
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'items',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'UserDict',
        class: 'collections',
        category: 6,
        type_: 0,
        href: '#collections.UserDict',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'initialdata',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'UserList',
        class: 'collections',
        category: 7,
        type_: 0,
        href: '#collections.UserList',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'list',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'UserString',
        class: 'collections',
        category: 8,
        type_: 0,
        href: '#collections.UserString',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'sequence',
            optional: true
          }
        ]
      }),
      newItem({
        name: '__missing__',
        class: 'collections.defaultdict',
        category: 3,
        type_: 3,
        href: '#collections.defaultdict.__missing__',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'key'
          }
        ]
      }),
      newItem({
        name: '_asdict',
        class: 'somenamedtuple',
        holder: 'collections.somenamedtuple',
        category: 4,
        type_: 3,
        href: '#collections.somenamedtuple._asdict',
        ary: 0
      }),
      newItem({
        name: '_fields',
        class: 'somenamedtuple',
        holder: 'collections.somenamedtuple',
        category: 4,
        type_: 4,
        href: '#collections.somenamedtuple._fields',
        ary: 0
      }),
      newItem({
        name: '_make',
        class: 'somenamedtuple',
        holder: 'collections.somenamedtuple',
        category: 4,
        type_: 2,
        href: '#collections.somenamedtuple._make',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'iterable'
          }
        ]
      }),
      newItem({
        name: '_replace',
        class: 'somenamedtuple',
        holder: 'collections.somenamedtuple',
        category: 4,
        type_: 3,
        href: '#collections.somenamedtuple._replace',
        ary: Infinity,
        mandatory: 0,
        arguments: [
          {
            name: '**kwargs',
            optional: true
          }
        ]
      }),
      newItem({
        name: '_source',
        class: 'somenamedtuple',
        holder: 'collections.somenamedtuple',
        category: 4,
        type_: 4,
        href: '#collections.somenamedtuple._source',
        ary: 0
      }),
      newItem({
        name: 'append',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.append',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'x'
          }
        ]
      }),
      newItem({
        name: 'appendleft',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.appendleft',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'x'
          }
        ]
      }),
      newItem({
        name: 'clear',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.clear',
        stmt: true,
        ary: 0
      }),
      newItem({
        name: 'copy',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.copy',
        stmt: true,
        ary: 0
      }),
      newItem({
        name: 'count',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.count',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'x'
          }
        ]
      }),
      newItem({
        name: 'defaultdict',
        class: 'collections',
        category: 3,
        type_: 0,
        href: '#collections.defaultdict',
        ary: 2,
        mandatory: 0,
        arguments: [
          {
            name: 'default_factory',
            optional: true
          },
          {
            name: '...',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'deque',
        class: 'collections',
        category: 2,
        type_: 0,
        href: '#collections.deque',
        ary: 2,
        mandatory: 0,
        arguments: [
          {
            name: 'iterable',
            optional: true
          },
          {
            name: 'maxlen',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'elements',
        class: 'collections.Counter',
        category: 1,
        type_: 3,
        href: '#collections.Counter.elements',
        ary: 0
      }),
      newItem({
        name: 'extend',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.extend',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'iterable'
          }
        ]
      }),
      newItem({
        name: 'extendleft',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.extendleft',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'iterable'
          }
        ]
      }),
      newItem({
        name: 'fromkeys',
        class: 'collections.Counter',
        category: 1,
        type_: 3,
        href: '#collections.Counter.fromkeys',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'iterable'
          }
        ]
      }),
      newItem({
        name: 'index',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.index',
        ary: 3,
        mandatory: 1,
        arguments: [
          {
            name: 'x'
          },
          {
            name: 'start',
            optional: true
          },
          {
            name: 'stop',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'insert',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.insert',
        stmt: true,
        ary: 2,
        arguments: [
          {
            name: 'i'
          },
          {
            name: 'x'
          }
        ]
      }),
      newItem({
        name: 'most_common',
        class: 'collections.Counter',
        category: 1,
        type_: 3,
        href: '#collections.Counter.most_common',
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'n',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'move_to_end',
        class: 'collections.OrderedDict',
        category: 5,
        type_: 3,
        href: '#collections.OrderedDict.move_to_end',
        stmt: true,
        ary: 2,
        mandatory: 1,
        arguments: [
          {
            name: 'key'
          },
          {
            name: 'last',
            default: 'True'
          }
        ]
      }),
      newItem({
        name: 'namedtuple',
        class: 'collections',
        category: 4,
        type_: 1,
        href: '#collections.namedtuple',
        ary: Infinity,
        mandatory: 2,
        arguments: [
          {
            name: 'typename'
          },
          {
            name: 'field_names'
          },
          {
            name: '*',
            optional: true
          },
          {
            name: 'verbose',
            default: 'False'
          },
          {
            name: 'rename',
            default: 'False'
          },
          {
            name: 'module',
            default: 'None'
          }
        ]
      }),
      newItem({
        name: 'new_child',
        class: 'collections.ChainMap',
        category: 0,
        type_: 3,
        href: '#collections.ChainMap.new_child',
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'm',
            default: 'None'
          }
        ]
      }),
      newItem({
        name: 'pop',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.pop',
        ary: 0
      }),
      newItem({
        name: 'popitem',
        class: 'collections.OrderedDict',
        category: 5,
        type_: 3,
        href: '#collections.OrderedDict.popitem',
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'last',
            default: 'True'
          }
        ]
      }),
      newItem({
        name: 'popleft',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.popleft',
        ary: 0
      }),
      newItem({
        name: 'remove',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.remove',
        stmt: true,
        ary: 1,
        arguments: [
          {
            name: 'value'
          }
        ]
      }),
      newItem({
        name: 'reverse',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.reverse',
        ary: 0
      }),
      newItem({
        name: 'rotate',
        class: 'collections.deque',
        category: 2,
        type_: 3,
        href: '#collections.deque.rotate',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'n',
            default: 1
          }
        ]
      }),
      newItem({
        name: 'subtract',
        class: 'collections.Counter',
        category: 1,
        type_: 3,
        href: '#collections.Counter.subtract',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'iterable-or-mapping',
            optional: true
          }
        ]
      }),
      newItem({
        name: 'update',
        class: 'collections.Counter',
        category: 1,
        type_: 3,
        href: '#collections.Counter.update',
        stmt: true,
        ary: 1,
        mandatory: 0,
        arguments: [
          {
            name: 'iterable-or-mapping',
            optional: true
          }
        ]
      })
    ],
    by_name: {
      'ChainMap': 0,
      'Counter': 1,
      'OrderedDict': 2,
      'UserDict': 3,
      'UserList': 4,
      'UserString': 5,
      '__missing__': 6,
      '_asdict': 7,
      '_fields': 8,
      '_make': 9,
      '_replace': 10,
      '_source': 11,
      'append': 12,
      'appendleft': 13,
      'clear': 14,
      'copy': 15,
      'count': 16,
      'defaultdict': 17,
      'deque': 18,
      'elements': 19,
      'extend': 20,
      'extendleft': 21,
      'fromkeys': 22,
      'index': 23,
      'insert': 24,
      'most_common': 25,
      'move_to_end': 26,
      'namedtuple': 27,
      'new_child': 28,
      'pop': 29,
      'popitem': 30,
      'popleft': 31,
      'remove': 32,
      'reverse': 33,
      'rotate': 34,
      'subtract': 35,
      'update': 36
    },
    by_category: {
      0: [0, 28],
      1: [1, 19, 22, 25, 35, 36],
      2: [12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 29, 31, 32, 33, 34],
      3: [6, 17],
      4: [7, 8, 9, 10, 11, 27],
      5: [2, 26, 30],
      6: [3],
      7: [4],
      8: [5]
    },
    by_type: {
      0: [0, 1, 2, 3, 4, 5, 17, 18],
      1: [27],
      2: [9],
      3: [6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36],
      4: [8, 11]
    }
  }
  

}) ()


  // This file was generated by `python3 ./bin/helpers/modulebot.py collections` on 2020-03-04 13:02:49.154266


